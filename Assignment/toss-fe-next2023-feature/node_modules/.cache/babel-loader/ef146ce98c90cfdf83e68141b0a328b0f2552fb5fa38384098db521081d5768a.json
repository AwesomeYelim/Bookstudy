{"ast":null,"code":"import { createKeypad } from 'pages/remotes';\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nexport const arr = [];\nconst Keypad = ({\n  type,\n  useInput: [inputValue, setInputValue],\n  // pw, pwc input에 뿌려주는곳\n  useElement: [element, setElement],\n  // data 받는곳\n  useError: [error, setError],\n  // 에러받는곳\n  usePw: [_, setF] // 키패드 각자 나타나게 하는 trigger\n}) => {\n  const [currentV, setCurrentV] = useState({\n    uid: '',\n    coordinate: [],\n    numbering: []\n  });\n  const setValue = ({\n    uid,\n    item,\n    ij\n  }) => {\n    const value = {\n      coordinate: [],\n      numbering: 0\n    };\n    value['coordinate'] = ij;\n    value['numbering'] = item.match('data-testid=\"\\\\d') && Number(item.match('data-testid=\"\\\\d')[0].split('=\"')[1]);\n    if (!currentV.numbering.length) {\n      setError({\n        e1: '비밀번호를 입력해주세요.',\n        e2: ''\n      });\n    }\n    if (type === 'pw' && inputValue.pw.numbering.length > 5 || type === 'pwC' && inputValue.pwC.numbering.length > 5) {\n      setError({\n        e1: '',\n        e2: '6자리로 입력해주세요'\n      });\n      setCurrentV({\n        uid,\n        coordinate: [...currentV.coordinate],\n        numbering: [...currentV.numbering]\n      });\n      if (type === 'pw') {\n        setInputValue({\n          pw: {\n            ...currentV\n          },\n          pwC: {\n            uid: '',\n            coordinate: [],\n            numbering: []\n          }\n        });\n      }\n      if (type === 'pwC') {\n        setInputValue({\n          ...inputValue,\n          pwC: {\n            ...currentV\n          }\n        });\n      }\n    } else {\n      setError({\n        e1: '',\n        e2: ''\n      });\n      setCurrentV({\n        uid,\n        coordinate: [...currentV.coordinate, value.coordinate],\n        numbering: value.numbering !== null ? [...currentV.numbering, value.numbering] : [...currentV.numbering]\n      });\n      if (type === 'pw') {\n        setInputValue({\n          pw: {\n            ...currentV,\n            coordinate: [...currentV.coordinate, value.coordinate],\n            numbering: value.numbering !== null ? [...currentV.numbering, value.numbering] : [...currentV.numbering]\n          },\n          pwC: {\n            uid: '',\n            coordinate: [],\n            numbering: []\n          }\n        });\n      } else if (type === 'pwC') {\n        setInputValue({\n          ...inputValue,\n          pwC: {\n            ...currentV,\n            coordinate: [...currentV.coordinate, value.coordinate],\n            numbering: value.numbering !== null ? [...currentV.numbering, value.numbering] : [...currentV.numbering]\n          }\n        });\n      }\n    }\n  };\n  const call = async () => {\n    try {\n      if (!element.mount || element.pwCd.pd.length) {\n        const {\n          uid,\n          keypad: {\n            svgGrid\n          }\n        } = await createKeypad();\n        setElement(pre => ({\n          //   pwD: { pw: [...pre.pwCd.pwC], uid: pre.pwCd.uid },\n          pwD: {\n            ...pre.pwCd\n          },\n          pwCd: {\n            uid,\n            pd: svgGrid\n          },\n          mount: true\n        }));\n        // setCurrentV({ ...currentV, uid });\n\n        // await createKeypad().then(value => {\n        //   //   arr = [...arr, value];\n        //   arr.push(value);\n        //   console.log(arr);\n        // });\n\n        // setInputValue({ coordinate: [], numbering: [] });\n      }\n\n      //   arr.forEach(value => {\n      //     const {\n      //       keypad: { svgGrid },\n      //     } = value;\n      //     console.log(value);\n\n      //     setElement({ data: svgGrid, mount: true });\n      //   });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  if (!element.mount) {\n    call();\n  }\n  const els = ({\n    uid,\n    pd\n  }) => {\n    return pd.map((el, i) => {\n      const flexArea = el.map((item, j) => {\n        if (!item.includes('<g>')) {\n          return _jsx(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: item\n            },\n            onClick: call\n          }, `p_${i}`);\n        }\n        return _jsx(\"div\", {\n          onClick: () => {\n            setValue({\n              uid,\n              item,\n              ij: [i, j]\n            });\n          },\n          dangerouslySetInnerHTML: {\n            __html: item\n          }\n        }, `c_${i}_${j}`);\n      });\n      const spanEl = i => {\n        switch (i) {\n          case 0:\n            return _jsx(\"span\", {\n              onClick: () => {\n                if (type === 'pw') {\n                  setInputValue({\n                    ...inputValue,\n                    pw: {\n                      ...inputValue.pw,\n                      coordinate: [...inputValue.pw.coordinate.slice(0, -1)],\n                      numbering: [...inputValue.pw.numbering.slice(0, -1)]\n                    }\n                  });\n                }\n                if (type === 'pwC') {\n                  setInputValue({\n                    ...inputValue,\n                    pwC: {\n                      ...inputValue.pwC,\n                      coordinate: [...inputValue.pwC.coordinate.slice(0, -1)],\n                      numbering: [...inputValue.pwC.numbering.slice(0, -1)]\n                    }\n                  });\n                }\n              },\n              children: \"\\u2190\"\n            });\n          case 1:\n            return _jsx(\"span\", {\n              onClick: () => {\n                setCurrentV({\n                  uid: '',\n                  coordinate: [],\n                  numbering: []\n                });\n                setInputValue({\n                  pw: {\n                    uid: '',\n                    coordinate: [],\n                    numbering: []\n                  },\n                  pwC: {\n                    uid: '',\n                    coordinate: [],\n                    numbering: []\n                  }\n                });\n                setError({\n                  ...error,\n                  e2: ''\n                });\n              },\n              children: \"\\uC804\\uCCB4\\uC0AD\\uC81C\"\n            });\n          case 2:\n            return _jsx(\"span\", {\n              className: \"confirm\",\n              onClick: () => {\n                if (inputValue.pw.numbering.length < 6) {\n                  setCurrentV({\n                    uid: '',\n                    coordinate: [],\n                    numbering: []\n                  });\n                  setInputValue({\n                    pw: {\n                      uid: '',\n                      coordinate: [],\n                      numbering: []\n                    },\n                    pwC: {\n                      uid: '',\n                      coordinate: [],\n                      numbering: []\n                    }\n                  });\n                }\n                setF({\n                  pw: false,\n                  pwC: false\n                });\n              },\n              children: \"\\uD655\\uC778\"\n            });\n        }\n        return _jsx(\"span\", {});\n      };\n      return _jsxs(\"div\", {\n        className: \"flex_area\",\n        children: [flexArea, spanEl(i)]\n      }, `${i}`);\n    });\n  };\n  return _jsxs(_Fragment, {\n    children: [type === 'pwC' ? els(element.pwCd) : els(element.pwD), _jsx(\"p\", {\n      children: error.e1\n    }), _jsx(\"p\", {\n      children: error.e2\n    })]\n  });\n};\nexport default Keypad;","map":{"version":3,"names":["createKeypad","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","arr","Keypad","type","useInput","inputValue","setInputValue","useElement","element","setElement","useError","error","setError","usePw","_","setF","currentV","setCurrentV","uid","coordinate","numbering","setValue","item","ij","value","match","Number","split","length","e1","e2","pw","pwC","call","mount","pwCd","pd","keypad","svgGrid","pre","pwD","err","console","log","els","map","el","i","flexArea","j","includes","dangerouslySetInnerHTML","__html","onClick","spanEl","slice","children","className"],"sources":["C:/Users/User/Desktop/yelim/Study/Assignment/toss-fe-next2023-feature/src/_tosslib/components/Keypad.tsx"],"sourcesContent":["import { DElement, ErrorM, InputValue, Pw, Value } from 'pages/KeypadPage';\r\nimport { CreateKeypad, createKeypad } from 'pages/remotes';\r\nimport { Dispatch, SetStateAction, useState } from 'react';\r\n\r\ninterface Props {\r\n  type: 'pw' | 'pwC';\r\n  useInput: [InputValue, Dispatch<SetStateAction<InputValue>>];\r\n  useElement: [DElement, Dispatch<SetStateAction<DElement>>];\r\n  useError: [ErrorM, Dispatch<SetStateAction<ErrorM>>];\r\n  usePw: [Pw, Dispatch<SetStateAction<Pw>>];\r\n}\r\n\r\nexport const arr: CreateKeypad[] = [];\r\n\r\nconst Keypad = ({\r\n  type,\r\n  useInput: [inputValue, setInputValue], // pw, pwc input에 뿌려주는곳\r\n  useElement: [element, setElement], // data 받는곳\r\n  useError: [error, setError], // 에러받는곳\r\n  usePw: [_, setF], // 키패드 각자 나타나게 하는 trigger\r\n}: Props) => {\r\n  const [currentV, setCurrentV] = useState<Value>({\r\n    uid: '',\r\n    coordinate: [],\r\n    numbering: [],\r\n  });\r\n\r\n  const setValue = ({ uid, item, ij }: { uid: string; item: string; ij: number[] }) => {\r\n    const value: { coordinate: number[]; numbering: number | null } = { coordinate: [], numbering: 0 };\r\n\r\n    value['coordinate'] = ij;\r\n    value['numbering'] = item.match('data-testid=\"\\\\d') && Number(item.match('data-testid=\"\\\\d')![0].split('=\"')[1]);\r\n\r\n    if (!currentV.numbering.length) {\r\n      setError({ e1: '비밀번호를 입력해주세요.', e2: '' });\r\n    }\r\n    if (\r\n      (type === 'pw' && inputValue!.pw.numbering.length > 5) ||\r\n      (type === 'pwC' && inputValue!.pwC.numbering.length > 5)\r\n    ) {\r\n      setError({ e1: '', e2: '6자리로 입력해주세요' });\r\n      setCurrentV({\r\n        uid,\r\n        coordinate: [...currentV.coordinate],\r\n        numbering: [...currentV.numbering],\r\n      });\r\n      if (type === 'pw') {\r\n        setInputValue({\r\n          pw: { ...currentV },\r\n          pwC: {\r\n            uid: '',\r\n            coordinate: [],\r\n            numbering: [],\r\n          },\r\n        });\r\n      }\r\n      if (type === 'pwC') {\r\n        setInputValue({\r\n          ...inputValue,\r\n          pwC: { ...currentV },\r\n        });\r\n      }\r\n    } else {\r\n      setError({ e1: '', e2: '' });\r\n      setCurrentV({\r\n        uid,\r\n        coordinate: [...currentV.coordinate, value.coordinate],\r\n        numbering:\r\n          value.numbering !== null ? [...currentV.numbering, value.numbering as number] : [...currentV.numbering],\r\n      });\r\n      if (type === 'pw') {\r\n        setInputValue({\r\n          pw: {\r\n            ...currentV,\r\n            coordinate: [...currentV.coordinate, value.coordinate],\r\n            numbering:\r\n              value.numbering !== null ? [...currentV.numbering, value.numbering as number] : [...currentV.numbering],\r\n          },\r\n          pwC: {\r\n            uid: '',\r\n            coordinate: [],\r\n            numbering: [],\r\n          },\r\n        });\r\n      } else if (type === 'pwC') {\r\n        setInputValue({\r\n          ...inputValue,\r\n          pwC: {\r\n            ...currentV,\r\n            coordinate: [...currentV.coordinate, value.coordinate],\r\n            numbering:\r\n              value.numbering !== null ? [...currentV.numbering, value.numbering as number] : [...currentV.numbering],\r\n          },\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const call = async () => {\r\n    try {\r\n      if (!element.mount || element.pwCd.pd.length) {\r\n        const {\r\n          uid,\r\n          keypad: { svgGrid },\r\n        } = await createKeypad();\r\n\r\n        setElement(pre => ({\r\n          //   pwD: { pw: [...pre.pwCd.pwC], uid: pre.pwCd.uid },\r\n          pwD: { ...pre.pwCd },\r\n          pwCd: { uid, pd: svgGrid },\r\n          mount: true,\r\n        }));\r\n        // setCurrentV({ ...currentV, uid });\r\n\r\n        // await createKeypad().then(value => {\r\n        //   //   arr = [...arr, value];\r\n        //   arr.push(value);\r\n        //   console.log(arr);\r\n        // });\r\n\r\n        // setInputValue({ coordinate: [], numbering: [] });\r\n      }\r\n\r\n      //   arr.forEach(value => {\r\n      //     const {\r\n      //       keypad: { svgGrid },\r\n      //     } = value;\r\n      //     console.log(value);\r\n\r\n      //     setElement({ data: svgGrid, mount: true });\r\n      //   });\r\n    } catch (err: any) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  if (!element.mount) {\r\n    call();\r\n  }\r\n\r\n  const els = ({ uid, pd }: { uid: string; pd: string[][] }) => {\r\n    return pd.map((el, i) => {\r\n      const flexArea = el.map((item, j) => {\r\n        if (!item.includes('<g>')) {\r\n          return <div key={`p_${i}`} dangerouslySetInnerHTML={{ __html: item }} onClick={call}></div>;\r\n        }\r\n\r\n        return (\r\n          <div\r\n            key={`c_${i}_${j}`}\r\n            onClick={() => {\r\n              setValue({ uid, item, ij: [i, j] });\r\n            }}\r\n            dangerouslySetInnerHTML={{ __html: item }}\r\n          ></div>\r\n        );\r\n      });\r\n      const spanEl = (i: number) => {\r\n        switch (i) {\r\n          case 0:\r\n            return (\r\n              <span\r\n                onClick={() => {\r\n                  if (type === 'pw') {\r\n                    setInputValue({\r\n                      ...inputValue,\r\n                      pw: {\r\n                        ...inputValue.pw,\r\n                        coordinate: [...inputValue.pw.coordinate.slice(0, -1)],\r\n                        numbering: [...inputValue.pw.numbering.slice(0, -1)],\r\n                      },\r\n                    });\r\n                  }\r\n                  if (type === 'pwC') {\r\n                    setInputValue({\r\n                      ...inputValue,\r\n                      pwC: {\r\n                        ...inputValue.pwC,\r\n\r\n                        coordinate: [...inputValue.pwC.coordinate.slice(0, -1)],\r\n                        numbering: [...inputValue.pwC.numbering.slice(0, -1)],\r\n                      },\r\n                    });\r\n                  }\r\n                }}\r\n              >\r\n                ←\r\n              </span>\r\n            );\r\n          case 1:\r\n            return (\r\n              <span\r\n                onClick={() => {\r\n                  setCurrentV({ uid: '', coordinate: [], numbering: [] });\r\n                  setInputValue({\r\n                    pw: { uid: '', coordinate: [], numbering: [] },\r\n                    pwC: { uid: '', coordinate: [], numbering: [] },\r\n                  });\r\n                  setError({ ...error, e2: '' });\r\n                }}\r\n              >\r\n                전체삭제\r\n              </span>\r\n            );\r\n          case 2:\r\n            return (\r\n              <span\r\n                className=\"confirm\"\r\n                onClick={() => {\r\n                  if (inputValue.pw.numbering.length < 6) {\r\n                    setCurrentV({ uid: '', coordinate: [], numbering: [] });\r\n                    setInputValue({\r\n                      pw: { uid: '', coordinate: [], numbering: [] },\r\n                      pwC: { uid: '', coordinate: [], numbering: [] },\r\n                    });\r\n                  }\r\n                  setF({ pw: false, pwC: false });\r\n                }}\r\n              >\r\n                확인\r\n              </span>\r\n            );\r\n        }\r\n        return <span></span>;\r\n      };\r\n\r\n      return (\r\n        <div className=\"flex_area\" key={`${i}`}>\r\n          {flexArea}\r\n          {spanEl(i)}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {type === 'pwC' ? els(element.pwCd) : els(element.pwD)}\r\n      <p>{error.e1}</p>\r\n      <p>{error.e2}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Keypad;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}